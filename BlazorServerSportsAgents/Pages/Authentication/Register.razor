@page "/Register"
@using SportsAgents
@inject HttpClient Http

<h3>Register</h3>

<p>@message</p>
<p><a href="/login">@login</a></p>

<EditForm Model="reg" OnValidSubmit="OnValid" style="max-width:500px;">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="mb-2">
		<p>Enter Full name:</p>
		<InputText class="form-control" @bind-Value="reg.fullname" placeholder="Enter Full name"></InputText>
	</div>
	<div class="mb-2">
		<p>Enter Age:</p>
		<InputNumber class="form-control" @bind-Value="reg.age" min="0"></InputNumber>
	</div>
	<div class="mb-2">
		<p>Enter Email:</p>
		<InputText class="form-control" @bind-Value="reg.email" placeholder="Enter Email"></InputText>
	</div>
	<div class="mb-2">
		<p>Enter Password:</p>
		<InputText type="password" class="form-control" @bind-Value="reg.password" placeholder="Enter Password"></InputText>
	</div>
	<div class="mb-2">
		<p>Confirm Password:</p>
		<InputText type="password" class="form-control" @bind-Value="reg.confirmpwd" placeholder="Confirm Password"></InputText>
	</div>
	<br />
	<div class="mb-2 text-right">
		<button class="btn btn-secondary" disabled="@isDisabled">register</button>
	</div>
</EditForm>

@code {
    SportsAgents.RegModel reg = new SportsAgents.RegModel();

    string message = string.Empty, login = string.Empty;

    bool isDisabled = false;


    private async Task OnValid()
    {
		isDisabled = true;
		using (var msg = await Http.PostAsJsonAsync<SportsAgents.RegModel>("https://localhost:7047/api/Auth/Register", reg, System.Threading.CancellationToken.None))
		{
			if (msg.IsSuccessStatusCode)
			{
				SportsAgents.LoginResult result = await msg.Content.ReadFromJsonAsync<SportsAgents.LoginResult>();
				message = result.message;
				if (result.success)
				{
					message += " Please LOGIN to continue.";
					login = "Click here to LOGIN.";
				}
				else
					isDisabled = false;
			}
		}

	}
}