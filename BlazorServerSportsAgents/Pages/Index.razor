@page "/"

@using BlazorServerDbContextExample.Grid
@using Microsoft.EntityFrameworkCore
@using SportsAgents.Models
@inject IHttpClientFactory IHttpClientFactory
@inject HttpClient Http
@inject IAthleteFilters Filters
@inject NavigationManager Navigation

<h1>Athletes</h1>
<GridWrapper @ref="Wrapper">
    <div class="container-fluid athletes-grid">
        <div class="row athlete-header">
            <div class="col-2">&nbsp; Full name
            </div>
            <div class="col-3">&nbsp;Age
            </div>
            <div class="col-2">&nbsp;Discipline name
            </div>
            <div class="col-1">&nbsp;User login
            </div>
        </div>
        @if (Filters.Loading || athletes is null)
        {
            <div class="row">
                <div class="col-12 alert alert-info">
                    Loading...
                </div>
            </div>
        }
        @if (athletes is not null && athletes.Count == 0)
        {
            <div class="row">
                <div class="col-12 alert alert-warning">
                    No athletes found.
                </div>
            </div>
        }
        @if (athletes is not null)
        {
            @foreach (Athlete athlete in athletes)
            {
                <AthleteRow @key=athlete CurrentAthlete="@athlete" />
            }
        }
    </div>
</GridWrapper>


@code{
    private GridWrapper Wrapper { get; set; } = new GridWrapper();

    private ICollection<Athlete>? athletes { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
    }

    protected override async Task OnParametersSetAsync()
    {
        await ReloadAsync();
        await base.OnParametersSetAsync();
    }

    private async Task ReloadAsync()
    {
        athletes = new List<Athlete>();

        try
		{
			var requestMsg = new HttpRequestMessage(HttpMethod.Get, $"https://localhost:7047/api/Athletes");
			var response = await Http.SendAsync(requestMsg);
			if (response.StatusCode == System.Net.HttpStatusCode.NoContent)
				athletes = null;
			else if (response.IsSuccessStatusCode)
				athletes = await response.Content.ReadFromJsonAsync<List<Athlete>>();
		}
		catch (Exception ex) {
		}
    }
}
