@page "/user/user1"

@using BlazorServerDbContextExample.Data
@using BlazorServerDbContextExample.Grid
@using Microsoft.EntityFrameworkCore
@using SportsAgents.Models
@using SportsAgentsService

@inject IDbContextFactory<SportsAgentsContext> DbFactory

@if (NotFound)
{
    <div class="alert alert-warning">A User with that login doesn't exist.</div>
}
else
{
    @if (User is null)
    {
        <div class="alert alert-info">Loading...</div>
    }
    else
    {
        <h1>User informations</h1>
        <hr />
        <h3>User login: @User.Login</h3>
        <h3>Email: @User.Email</h3>
        <h3>Full name: @User.FullName</h3>
        <h3>Age: @User.Age</h3>
        <br />
    }
}

@code {
    [Parameter]
    public string UserLogin { get; set; }

    private string _lastUserLogin = string.Empty;

    private User? User { get; set; }

    private bool NotFound = false;

    protected override async Task OnParametersSetAsync()
    {
        // TODO: to throw
        UserLogin = "user1";
        //
        if (_lastUserLogin != UserLogin)
        {
            _lastUserLogin = UserLogin;
            await LoadAthleteAsync();
        }
        await base.OnParametersSetAsync();
    }

    private async Task LoadAthleteAsync()
    {
        NotFound = false;
        User = null;

        using var context = DbFactory.CreateDbContext();

        if (context.Athletes is not null)
        {
            User = await context.Users
                .AsNoTracking()
                .SingleOrDefaultAsync(
                    c => c.Login == UserLogin);

            if (User is null)
            {
                NotFound = true;
            }
        }
    }
}
